{"version":3,"sources":["components/products/filter.js","components/products/createProduct.js","components/products/createBrand.js","components/products/createCategory.js","components/products/productCard.js","components/products/editCategory.js","components/products/products.js","serviceWorker.js","404.js","components/products/productPage.js","components/products/productsHier.js","index.js"],"names":["Filter","className","value","this","props","selectedItem","onChange","options","isMulti","placeholder","React","Component","CreateProduct","handleSubmit","e","preventDefault","state","productName","trim","product","product_name","replace","brand_id","brandID","category_id","categoryID","specs_keys","specsKeys","description","fetch","method","headers","body","JSON","stringify","then","res","json","data","result","alert","refreshList","setState","modalShow","key","unit","handleChange","includes","target","dataset","id","name","brands","categories","onShowModal","bind","onHideModal","addSpecifications","deleteSpecifications","undefined","length","prevState","pop","onClick","Modal","size","show","onHide","aria-labelledby","Header","closeButton","Title","Body","onSubmit","htmlFor","type","map","brand_name","category_name","val","idx","keyId","valueId","unitId","data-id","rows","CreateBrand","brandName","handleBrandName","createBrand","brandData","CreateCategory","parentCategoryData","categoryName","parentCategory","showModal","handleParentCategory","createCategory","handleCategoryName","categoryData","parent_name","ProductCard","products","product_id","to","slug","EditCategory","changeParent","changedParentname","categoryChangedName","showChange","onCategoryChange","onCategoryNameChange","onParentChange","onEditCategory","category_new_name","parent_new_name","window","location","href","Products","onBrandsChange","selectedBrand","filter","selectedCategory","displayProducts","brandFilter","categoryFilter","CategoryFilter","handleFilters","setRefreshList","fetchProducts","fetchCategories","fetchBrands","elements","document","getElementsByClassName","remove","nextProps","nextState","item","push","label","randomint","Math","floor","random","Boolean","hostname","match","PageNotFound","ProductPage","productCheck","productData","specifications","breadcrum","breadcrum_links","params","aria-label","aria-current","link","ProductsHier","dataChange","flag","hierCheck","filtered_brands","Map","obj","values","filtered_categories","index","routing","exact","path","component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2638c39.chunk.js","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\n\n\nclass Filter extends React.Component {\n\n  render(){\n    return(\n      <div className=\"mt-2\">\n      <Select\n        value={this.props.selectedItem}\n        onChange={this.props.onChange}\n        options={this.props.value}\n        isMulti = {true}\n        placeholder= {this.props.placeholder}\n      />\n      </div>\n    )\n  }\n}\n\nexport default Filter;\n","import React from \"react\";\nimport Modal from 'react-bootstrap/Modal';\n\n\nclass CreateProduct extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n        modalShow : false,\n        productName : \"\",\n        brandID : \"\",\n        categoryID : \"\",\n        specsKeys : [{key:'',value:'',unit:''}],\n        brands:[],\n        categories:[],\n        description: \"\"\n    }\n    this.onShowModal = this.onShowModal.bind(this);\n    this.onHideModal = this.onHideModal.bind(this)\n    this.addSpecifications = this.addSpecifications.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.deleteSpecifications = this.deleteSpecifications.bind(this)\n  }\n\n\n  onShowModal(){\n    fetch('/api/select-category')\n    .then(res => res.json())\n    .then(data => this.setState({categories:data}, ()=>{\n      this.setState({categoryID:this.state.categories[0]['category_id']})\n    }))\n    fetch('/api/brands')\n    .then(res => res.json())\n    .then(data => this.setState({brands: data},() => {\n      this.setState({brandID : this.state.brands[0]['brand_id']})\n    }))\n    this.setState({modalShow:true})\n}\n\n\n\n\n  onHideModal(){\n    this.setState({modalShow : false})\n    this.setState({productName: \"\"})\n    this.setState({specsKeys: [{key:'',value:'',unit:''}]})\n  }\n\n  addSpecifications(){\n    const specsKeys = this.state.specsKeys\n    if(specsKeys !== undefined){\n      if(specsKeys[specsKeys.length-1].key.trim() === \"\" || specsKeys[specsKeys.length -1 ].value.trim() === \"\"){\n        alert(\"Please Enter Previous Key and Value\")\n      }\n      else{\n        this.setState((prevState) => ({\n          specsKeys: [...prevState.specsKeys, {key:\"\", value:\"\",unit:\"\"}],\n        }));\n      }\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if(this.state.productName.trim() !== ''){\n\n    const product = [{product_name:this.state.productName.replace(/\\s+/g,' ').trim(),brand_id:this.state.brandID,\n      category_id:this.state.categoryID,specs_keys:this.state.specsKeys,description:this.state.description}]\n    fetch('/api/create-product',{\n      method : 'post',\n      headers : {\n        \"Content-Type\" : \"application/json\"\n      },\n      body : JSON.stringify(product) }\n    )\n    .then(res => res.json())\n    .then(data => {\n      if(data.result === 'success'){\n        alert(\"Product Created Successfully\")\n        this.props.refreshList(\"products\");\n        this.setState({modalShow : false})\n        this.setState({productName: \"\",specsKeys:[{key:\"\",value:\"\",unit:\"\"}]})\n      }\n      else{\n        alert(data.result+\" Please Try Again\")\n      }\n    })\n  }\n  else{\n    alert('Please Enter Product Name')\n  }\n  }\n\n  handleChange = (e) => {\n      if ([\"key\", \"value\", \"unit\"].includes(e.target.className) ) {\n        let specsKeys = [...this.state.specsKeys]\n        specsKeys[e.target.dataset.id][e.target.className] = e.target.value\n        this.setState({ specsKeys })\n      } else {\n        this.setState({ [e.target.name]: e.target.value })\n      }\n    }\n\n    deleteSpecifications() {\n      let data = this.state.specsKeys\n      if(data.length>1){\n      data.pop()\n      this.setState({specsKeys:data})\n    }\n    }\n\n\n\n  render() {\n\n    let {productName, specsKeys} = this.state\n    return(\n      <span>\n          <button className=\"btn btn-outline-dark\" onClick={this.onShowModal}>Create Product</button>\n          <Modal\n        size=\"lg\"\n        show={this.state.modalShow}\n        onHide={this.onHideModal}\n        aria-labelledby=\"example-modal-sizes-title-lg\">\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\n              Create New Product\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <form onSubmit={this.handleSubmit} onChange={this.handleChange}>\n          <div className=\"row\">\n            <div className=\"col\">\n              <label htmlFor=\"productName\">Product Name</label>\n              <input type=\"text\" className=\"form-control\" placeholder=\"Product Name\" name=\"productName\" value={productName} id=\"productName\" />\n            </div>\n            <div className=\"col\">\n              <label htmlFor=\"selectBrand\">Brand Name</label>\n              <select name=\"brandID\" className=\"form-control\" id=\"selectBrand\">\n                {\n                  this.state.brands.map(data =>\n                    <option value={data.brand_id} key={data.brand_id}>{data.brand_name}</option>\n                  )\n                }\n              </select>\n            </div>\n          </div>\n          <div className=\"row mt-4\">\n            <div className=\"col\">\n              <label htmlFor=\"selectCategory\">Category Name</label>\n              <select name=\"categoryID\" className=\"form-control\" id=\"selectCategory\">\n                {\n                  this.state.categories.map(data =>\n                    <option value={data.category_id} key={data.category_id}>{data.category_name}</option>\n                  )\n                }\n              </select>\n            </div>\n          </div>\n          <div className=\"text-center mt-4\">\n            <h4>Specifications <button type=\"button\" className=\"btn btn-outline-dark\" onClick={this.addSpecifications}> Add + </button> &nbsp;\n              <button type=\"button\" className=\"btn btn-outline-dark\" onClick={this.deleteSpecifications}> Delete - </button>\n             </h4>\n\n          </div>\n\n          {\n            specsKeys.map((val, idx) => {\n              let keyId = `key-${idx}`, valueId = `value-${idx}`, unitId = `unit-${idx}`\n              return(\n                <div className=\"form-row mt-4\" key={idx}>\n                <div className=\"form-group col-md-4\">\n                  <input type=\"text\" placeholder=\"Key\" className=\"key\" data-id={idx} value={specsKeys[idx].key} name={keyId} id={keyId} />\n                </div>\n                <div className=\"form-group col-md-4\">\n                  <input type=\"text\" placeholder=\"Value\" className=\"value\" id={valueId} value={specsKeys[idx].value} name={valueId} data-id={idx}/>\n                </div>\n                <div className=\"form-group col-md-4\">\n                  <input type=\"text\" placeholder=\"Unit\" className=\"unit\" id={unitId} value={specsKeys[idx].unit} name={unitId} data-id={idx} />\n                </div>\n                </div>\n              )\n            })\n          }\n          <div className=\"form-group mt-4\">\n              <label htmlFor=\"productDescription\">Product Description</label>\n              <textarea name=\"description\" className=\"form-control\" id=\"productDescription\" rows=\"3\" />\n          </div>\n          <div className=\"mt-3 text-center\">\n              <button type=\"submit\" className=\"btn btn-outline-dark\"> Create </button>\n          </div>\n        </form>\n        </Modal.Body>\n      </Modal>\n      </span>\n    )\n  }\n\n}\n\n\nexport default CreateProduct\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\n\nclass CreateBrand extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      modalShow : false,\n      brandName : \"\",\n    }\n    this.handleBrandName = this.handleBrandName.bind(this);\n    this.createBrand = this.createBrand.bind(this);\n  }\n\n  handleBrandName(e) {\n    this.setState({brandName: e.target.value})\n  }\n\n  createBrand(e) {\n    e.preventDefault();\n    if(this.state.brandName.trim() !== \"\"){\n    const brandData = [{brand_name: this.state.brandName.replace(/\\s+/g,' ').trim()}]\n    fetch('/api/createbrand',{\n      method : 'post',\n      headers : {\n        \"Content-Type\" : \"application/json\"\n      },\n      body : JSON.stringify(brandData)\n    })\n    .then(res => res.json())\n    .then(data => {\n      if(data[0].result === 1){\n        this.setState({modalShow: false}, ()=> {\n          alert(\"Brand Successfully Added\")\n          this.props.refreshList(\"brands\");\n        })\n\n      }\n      else{\n        alert(data[0].result+\" Please Try Again\")\n      }\n    })\n    }\n    else{\n      alert(\"Please Enter a Brand Name\")\n    }\n  }\n\n  render(){\n    return (\n      <span>\n          <button className=\"btn btn-outline-dark ml-2\" onClick={() => this.setState({modalShow :true})}>Create Brand</button>\n          <Modal\n        size=\"lg\"\n        show={this.state.modalShow}\n        onHide={() => this.setState({modalShow : false})}\n        aria-labelledby=\"example-modal-sizes-title-lg\">\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\n              Create New Brand\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <form>\n          <div className=\"row\">\n            <div className=\"col\">\n              <label htmlFor=\"productName\">Brand Name</label>\n              <input type=\"text\" className=\"form-control\" placeholder=\"Brand Name\" onChange = {this.handleBrandName} id=\"brandName\" />\n            </div>\n          </div>\n          <div className = \"text-center mt-4\">\n            <button className = \"btn btn-outline-dark\" onClick={this.createBrand}> Create </button>\n          </div>\n        </form>\n        </Modal.Body>\n      </Modal>\n      </span>\n    )\n  }\n}\n\nexport default CreateBrand;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\n\nclass CreateCategory extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      modalShow : false,\n      parentCategoryData : [],\n      categoryName : \"\",\n      parentCategory : \"\"\n    }\n    this.showModal = this.showModal.bind(this);\n    this.handleParentCategory = this.handleParentCategory.bind(this);\n    this.createCategory = this.createCategory.bind(this);\n    this.handleCategoryName = this.handleCategoryName.bind(this);\n  }\n\nshowModal() {\n  this.setState({modalShow : true})\n  fetch('/api/select-category')\n  .then(res => res.json())\n  .then(data => this.setState({parentCategoryData : data}))\n}\n\nhandleParentCategory(e) {\n  this.setState({parentCategory : e.target.value})\n}\n\ncreateCategory(e) {\n  e.preventDefault()\n  if(this.state.categoryName.trim() !== ''){\n  const categoryData = [{category_name : this.state.categoryName.replace(/\\s+/g,' ').trim(), parent_name : this.state.parentCategory}]\n  fetch('/api/create-category', {\n    method : 'post',\n    headers : {\n      \"Content-Type\" : \"application/json\"\n    },\n    body : JSON.stringify(categoryData)\n  })\n  .then(res => res.json())\n  .then(data => {\n    if (data[0].result === 1){\n      alert(\"Category created Successfully!!\")\n      this.setState({modalShow:false})\n      this.props.refreshList(\"categories\");\n    }\n    else{\n      alert(data[0].result+\" Please Try Again\")\n    }\n  })\n}\nelse{\n  alert(\"Please enter Category Name\")\n}\n}\n\nhandleCategoryName(e) {\n  this.setState({categoryName : e.target.value})\n}\n\n  render(){\n\n    return(\n      <span>\n          <button className=\"btn btn-outline-dark ml-2\" onClick = {this.showModal}>Create Category</button>\n          <Modal\n        size=\"lg\"\n        show={this.state.modalShow}\n        onHide={() => this.setState({modalShow : false})}\n        aria-labelledby=\"example-modal-sizes-title-lg\">\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\n              Create New Category\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <form>\n          <div className=\"row\">\n            <div className=\"col\">\n              <label htmlFor=\"categoryName\">Category Name</label>\n              <input type=\"text\" className=\"form-control\" placeholder=\"Category Name\" onChange = {this.handleCategoryName} id=\"categoryName\" />\n            </div>\n            <div className=\"col\">\n              <label htmlFor=\"selectParent\">Parent Category Name</label>\n              <select className=\"form-control\" id=\"selectParent\" onChange={this.handleParentCategory}>\n                    <option value=\"\">None</option>\n                {\n                  this.state.parentCategoryData.map(data =>\n                    <option value={data.category_name} key={data.category_id}>{data.category_name}</option>\n                  )\n                }\n              </select>\n            </div>\n          </div>\n          <div className = \"text-center mt-4\">\n            <button className = \"btn btn-outline-dark\" onClick={this.createCategory}> Create </button>\n          </div>\n        </form>\n        </Modal.Body>\n      </Modal>\n      </span>\n    )\n  }\n}\n\nexport default CreateCategory;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nclass ProductCard extends React.Component{\n  render() {\n    return(\n      <div className=\"row\">\n          {\n              this.props.products.map(product =>\n                  <div className = \"col-lg-4 mb-3 text-center\" key={product.product_id}>\n                    <Link className=\"link\" to={`/product/${product.slug}`} >\n                      <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h5>{product.product_name}</h5>\n                        </div>\n                        Brand : {product.brand_name}\n                        <br />\n                        Category : {product.category_name}\n                        <br />\n                        Parent Category : {product.parent_name}\n                      </div>\n                      </Link>\n                  </div>\n                )\n          }\n        </div>\n    )\n  }\n}\n\nexport default ProductCard\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\n\nclass EditCategory extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      modalShow: false,\n      categoryData: [],\n      categoryName: \"\",\n      changeParent: [],\n      changedParentname:\"\",\n      categoryChangedName: \"\",\n      showChange: false\n    }\n    this.onCategoryChange = this.onCategoryChange.bind(this)\n    this.onCategoryNameChange = this.onCategoryNameChange.bind(this)\n    this.onParentChange = this.onParentChange.bind(this)\n    this.onEditCategory = this.onEditCategory.bind(this)\n    this.onShowModal = this.onShowModal.bind(this)\n    this.onHideModal = this.onHideModal.bind(this)\n  }\n\n  onShowModal() {\n    this.setState({modalShow:true})\n    fetch('/api/select-category')\n    .then(res => res.json())\n    .then(data => {\n      this.setState({categoryData : data})\n    })\n  }\n\n  onHideModal(){\n    this.setState({modalShow: false})\n    this.setState({changeParent:[]})\n    this.setState({showChange: false})\n  }\n\n  onCategoryChange(e){\n    this.setState({categoryName:e.target.value})\n    this.setState({categoryChangedName:e.target.value})\n    fetch(`/api/edit-category/${e.target.value}`)\n    .then(res => res.json())\n    .then(data =>{\n      this.setState({changeParent:data})\n      this.setState({showChange:true})\n    })\n  }\n\n  onEditCategory(e) {\n      e.preventDefault();\n      fetch('/api/edit-category', {\n        method : 'post',\n        headers : {\n          \"Content-Type\" : \"application/json\"\n        },\n        body : JSON.stringify({category_name:this.state.categoryName, category_new_name:this.state.categoryChangedName.replace(/\\s+/g,' ').trim(), parent_new_name: this.state.changedParentname})\n      })\n      .then(res => res.json())\n      .then(data => {\n        if(data.result === 'success'){\n          this.setState({modalShow:false})\n          alert(\"Changes Saved\")\n          window.location.href = '/'\n        }\n        else{\n          alert(\"Please Try Again\")\n        }\n      })\n  }\n\n  onCategoryNameChange(e) {\n    this.setState({categoryChangedName: e.target.value})\n  }\n\n  onParentChange(e){\n    this.setState({changedParentname:e.target.value})\n  }\n\n  render() {\n    return(\n      <span>\n          <button className=\"btn btn-outline-dark ml-2\" onClick={this.onShowModal}>Edit Category</button>\n          <Modal\n        size=\"lg\"\n        show={this.state.modalShow}\n        onHide={this.onHideModal}\n        aria-labelledby=\"example-modal-sizes-title-lg\">\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\n              Edit Category\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <form>\n        <div className=\"row\">\n        <div className=\"col-md-12\">\n          <label htmlFor=\"selectCategory\">Category Name</label>\n          <select className=\"form-control\" id=\"selectCategory\" onChange={this.onCategoryChange}>\n                <option value=\"\">None</option>\n            {\n              this.state.categoryData.map(data =>\n                <option value={data.category_name} key={data.category_id}>{data.category_name}</option>\n              )\n            }\n          </select>\n        </div>\n        </div>\n        <br />\n        {\n          this.state.showChange ?\n          <span>\n          <div className=\"row\">\n          <div className=\"col-md-6\">\n            <label htmlFor=\"productName\">Category New Name</label>\n            <input type=\"text\" className=\"form-control\" name=\"productName\" onChange={this.onCategoryNameChange} value={this.state.categoryChangedName} id=\"productName\" />\n          </div>\n          <div className=\"col-md-6\">\n            <label htmlFor=\"selectParent\">Select New Parent</label>\n            <select name=\"parent\" className=\"form-control\" onChange={this.onParentChange} id=\"selectParent\">\n              <option value=\"\">None</option>\n              {\n                this.state.changeParent.map(data =>\n                  <option value={data.category_name} key={data.category_id}>{data.category_name}</option>\n                )\n              }\n            </select>\n          </div>\n          <br />\n          </div>\n            <div className=\"mt-3 text-center\">\n              <button className = \"btn btn-outline-dark\" onClick={this.onEditCategory}> Save Changes </button>\n            </div>\n          </span>:\n          <div />\n        }\n        </form>\n        </Modal.Body>\n      </Modal>\n      </span>\n    )\n  }\n}\n\nexport default EditCategory;\n","import React, {Component} from 'react';\nimport './products.css';\nimport Filter from './filter';\nimport CreateProduct from './createProduct';\nimport CreateBrand from './createBrand';\nimport CreateCategory from './createCategory';\nimport ProductCard from './productCard';\nimport EditCategory from './editCategory'\n\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products : [],\n      displayProducts: [],\n      brandFilter: [],\n      categoryFilter: [],\n      selectedBrand : null,\n      CategoryFilter: [],\n      selectedCategory: null,\n      filter:[\n        {brands:[]},\n        {categories:[]}\n      ],\n      refreshList : [\"brands\"]\n\n    }\n    this.onBrandsChange = this.onBrandsChange.bind(this)\n    this.handleFilters = this.handleFilters.bind(this)\n    this.setRefreshList = this.setRefreshList.bind(this)\n  }\n  componentDidMount(){\n      this.fetchProducts();\n      this.fetchCategories();\n      this.fetchBrands();\n      var elements = document.getElementsByClassName('css-1hb7zxy-IndicatorsContainer')\n      while (elements.length > 0) elements[0].remove();\n  }\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n      if(nextState.refreshList.length ===1 && nextState.refreshList[0].includes(\"categories\") === true && nextState.refreshList[0]!== this.state.refreshList[0]){\n          this.fetchCategories();\n          return true\n      }\n      if(nextState.refreshList.length ===1 && nextState.refreshList[0].includes(\"brands\") === true && nextState.refreshList[0] !== this.state.refreshList[0]){\n          this.fetchBrands();\n          return true\n      }\n      if(nextState.refreshList.length ===1 && nextState.refreshList[0].includes(\"products\") === true && nextState.refreshList[0] !== this.state.refreshList[0]){\n          this.fetchProducts();\n          return true\n      }\n      return true\n  }\n\nfetchCategories() {\n  fetch('api/select-category')\n    .then(res => res.json())\n    .then(data => {\n      let categories = []\n      for (let item in data){\n        categories.push({label:data[item].category_name, value:data[item].category_name})\n      }\n      this.setState({categoryFilter: categories})\n    })\n}\n\nfetchProducts() {\n  fetch('/api/products')\n    .then(res => res.json())\n    .then(products => {\n      this.setState({products})\n      this.setState({displayProducts : products})\n    })\n}\n\nfetchBrands() {\n  fetch('/api/brands')\n  .then(res => res.json())\n  .then(data => {\n    let brands = []\n    for(let item in data){\n        brands.push({label:data[item].brand_name, value:data[item].brand_name})\n    }\n    this.setState({brandFilter: brands})\n  })\n}\n\n  onBrandsChange = selectedBrand => {\n    var filter = this.state.filter\n    filter[0].brands = selectedBrand\n    filter[1].categories = this.state.selectedCategory\n    this.setState({filter:filter})\n    this.setState(\n      { selectedBrand },\n      () => {\n        fetch('/api/product_listing',{\n          method : 'post',\n          headers : {\n            \"Content-Type\" : \"application/json\"\n          },\n          body : JSON.stringify(this.state.filter)\n        })\n        .then(res => res.json())\n        .then(data => this.setState({displayProducts: data}, () => {\n        if(this.state.selectedBrand == null && this.state.selectedCategory == null){\n          this.setState({displayProducts:this.state.products})\n        }\n\n        }))\n      }\n    );\n\n\n  };\n\n  onCategoryChange = selectedCategory => {\n    if(this.state.selectedBrand == null && this.state.selectedCategory == null){\n      this.setState({displayProducts:this.state.products})\n    }\n    var filter = this.state.filter\n    filter[0].brands = this.state.selectedBrand\n    filter[1].categories = selectedCategory\n    this.setState({filter:filter},\n    () => {\n      fetch('/api/product_listing',{\n        method : 'post',\n        headers : {\n          \"Content-Type\" : \"application/json\"\n        },\n        body : JSON.stringify(this.state.filter)\n      })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({displayProducts:data}, () => {\n        if(this.state.selectedBrand == null && this.state.selectedCategory == null){\n          this.setState({displayProducts:this.state.products})\n        }\n        })\n      })\n      })\n    this.setState(\n      {selectedCategory})\n  }\n\n  handleFilters(){\n    this.setState({displayProducts:this.state.products})\n    this.setState({selectedBrand: null})\n    this.setState({selectedCategory: null})\n  }\n  setRefreshList(data){\n    let randomint = Math.floor(Math.random() * 1000000)\n    this.setState({refreshList:[data+randomint]})\n  }\n\n\n  render(){\n    return(\n      <div className= \"container\">\n          <div className = \"head\">\n              <h2 className=\"text-center\">Products</h2>\n          </div>\n          <div className=\"mb-3 form-group \">\n            <CreateProduct refreshList={this.setRefreshList}/>\n            <CreateBrand   refreshList = {this.setRefreshList}/>\n            <CreateCategory refreshList={this.setRefreshList} />\n            <EditCategory />\n          </div>\n          <div className=\"row m-1\">\n              <div className=\"col-lg-3\">\n                  <div className=\"card\">\n                      <h6 className=\"text-center\">Filter By</h6>\n                  </div>\n                  <Filter value = {this.state.brandFilter} selectedItem = {this.state.selectedBrand} onChange = {this.onBrandsChange} placeholder = {\"Select Brands\"}/>\n                  <Filter value = {this.state.categoryFilter} selectedItem = {this.state.selectedCategory} onChange = {this.onCategoryChange} placeholder = {\"Select Categories\"}/>\n                  <button className=\"btn btn-outline-dark mt-2\" onClick={this.handleFilters}>\n                      Reset Filters\n                  </button>\n              </div>\n              <div className=\"col-lg-9\">\n                  <ProductCard products={this.state.displayProducts} />\n                </div>\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default Products;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\n\nfunction PageNotFound()  {\n   return (<h1>Page Not Found</h1>)\n}\n\nexport default PageNotFound\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PageNotFound from '../../404'\n\nclass ProductPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      productCheck : false,\n      productData : [],\n      specifications : [],\n      breadcrum : [],\n      breadcrum_links :[]\n    }\n  }\n\n\n  componentDidMount() {\n    fetch(`/api/product/${this.props.match.params.id}`)\n    .then(res => res.json())\n    .then(data => {\n      if(data[0]['product'] === true){\n        this.setState({productData: data[0]['product_data']})\n        this.setState({specifications: data[0]['specifications']})\n        this.setState({productCheck : true})\n        this.setState({breadcrum : data[0]['breadcrum']})\n      }\n\n    })\n  }\n\n\n\n  render() {\n    const productData = this.state.productData[0]\n    return(\n      <div className=\"container\">\n      {\n        this.state.productCheck === true ?\n        <div className=\"mt-5\">\n        <nav aria-label=\"breadcrumb\">\n            <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\" aria-current=\"page\" >\n              <Link to={'/products'}>\n                Home\n              </Link>\n            </li>\n            {\n              this.state.breadcrum.map(data=>\n              <li className=\"breadcrumb-item\" aria-current=\"page\" key={data.link} >\n                  <Link to={\"/products\"+data.link} >\n                      {data.category_name}\n                  </Link>\n              </li>)\n            }\n              <li className=\"breadcrumb-item\" aria-current=\"page\">{productData.product_name}</li>\n            </ol>\n        </nav>\n        <div className= \"card mt-5\">\n            <div className=\"card-header text-center\">\n                <h1>{productData.product_name}</h1>\n            </div>\n            <div className=\"card-body\">\n                <div className=\"text-center\">\n                    Brand : {productData.brand_name}\n                    <br />\n                    Category : {productData.category_name}\n                    <br />\n                    Parent Name : {productData.parent_name}\n                    <br /><br />\n                    <h5>Specifications</h5>\n                    {this.state.specifications.map(data =>\n                        <div key={data.key}>{data.key} : {data.value} {data.unit}</div>\n                    )}\n                </div>\n            </div>\n            <div className=\"card-footer\">\n                <h5 className=\"text-center\">Descripton</h5>\n                <div className=\"row d-flex justify-content-center\">\n                    <div className=\" col-lg-4\">\n                        {productData.description}\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div> :\n        <PageNotFound />\n      }\n      </div>\n    )\n  }\n}\n\nexport default ProductPage\n","import React from 'react';\nimport './products.css';\nimport Filter from './filter';\nimport PageNotFound from '../../404'\nimport ProductCard from './productCard'\n\nclass ProductsHier extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n          products : [],\n          displayProducts: [],\n          breadcrum : [],\n          breadcrum_links : [],\n          flag : false,\n          brandFilter: [],\n          categoryFilter: [],\n          selectedBrand: null,\n          selectedCategory: null,\n          filter:[\n            {brands:[]},\n            {categories:[]}\n          ],\n          hierCheck : true\n    }\n  }\n  componentDidMount(){\n    fetch(`/api/hier/${this.props.match.params[0]}`)\n    .then(res => res.json())\n    .then(data => {\n      if (data.result === true){\n      this.setState({hierCheck:true})\n      this.setState({displayProducts:data.data})\n      this.setState({products: data.data})\n      this.setState({breadcrum_links:data.breadcrum})\n      let brands = []\n      let categories = []\n      let products = this.state.products\n      for (let item in products){\n        brands.push({label:products[item]['brand_name'], value: products[item]['brand_name']})\n        categories.push({label:products[item]['category_name'], value: products[item]['category_name']})\n      }\n      let filtered_brands = [...new Map(brands.map(obj => [JSON.stringify(obj), obj])).values()];\n      let filtered_categories = [...new Map(categories.map(obj => [JSON.stringify(obj), obj])).values()];\n      this.setState({brandFilter : filtered_brands})\n      this.setState({categoryFilter: filtered_categories})\n\n    var elements = document.getElementsByClassName('css-1hb7zxy-IndicatorsContainer')\n    while (elements.length > 0) elements[0].remove();\n  }\n  else{\n    this.setState({hierCheck: false})\n  }\n  })\n\n\n  }\n\n  onBrandsChange = selectedBrand => {\n    this.setState(\n      { selectedBrand },\n      () => this.dataChange()\n    );\n  }\n\n  onCategoryChange = selectedCategory => {\n      this.setState({selectedCategory}, ()=> {\n        this.dataChange()\n      })\n    }\n\ndataChange() {\n  var filter = this.state.filter\n  filter[0].brands = this.state.selectedBrand\n  filter[1].categories = this.state.selectedCategory\n  if(filter[1].categories == null){\n    filter[1].categories = this.state.categoryFilter\n  }\n  else if(filter[0].brands == null){\n    filter[0].brands = this.state.brandFilter\n  }\n  else if(filter[0].brands == null && filter[1].categories == null){\n    this.setState({displayProducts:this.state.products})\n  }\n  else{\n    filter[0].brands = this.state.selectedBrand\n    filter[1].categories = this.state.selectedCategory\n  }\n  this.setState({filter}, () => {\n    fetch('/api/product_listing',{\n      method : 'post',\n      headers : {\n        \"Content-Type\" : \"application/json\"\n      },\n      body : JSON.stringify(this.state.filter)\n    })\n    .then(res => res.json())\n    .then(data => this.setState({displayProducts: data}, () => {\n    if(this.state.selectedBrand == null && this.state.selectedCategory == null){\n      this.setState({displayProducts:this.state.products})\n    }\n\n    }))\n  })\n\n}\n\n\n\n  handleFilters(){\n    this.setState({displayProducts:this.state.products})\n    this.setState({selectedBrand: null})\n    this.setState({selectedCategory: null})\n  }\n\n\n  render() {\n    return(\n      <div>\n      { this.state.hierCheck === true ?\n      <div className= \"container\">\n        <div className=\"mt-5\">\n          <nav aria-label=\"breadcrumb\">\n              <ol className=\"breadcrumb\">\n              <li className=\"breadcrumb-item\" aria-current=\"page\" >\n                <a href=\"/\">\n                  Home\n                </a>\n              </li>\n                {\n                  this.state.breadcrum_links.map((data,index)=>{\n                    return(\n                    <li className=\"breadcrumb-item\" aria-current=\"page\" key={data.link}>\n                      { this.state.breadcrum_links.length -1 !== index ?\n                        <a  href = {\"/products\"+data.link}>\n                        {data.category_name}\n                      </a> :\n                       <span>{data.category_name} </span>\n                    }\n                    </li>\n                  )})\n                  }\n\n                </ol>\n            </nav>\n            <div className = \"row\">\n            <div className=\"col-lg-3\">\n                <div className=\"card\">\n                    <h6 className=\"text-center\">Filter By</h6>\n                </div>\n                <Filter value = {this.state.brandFilter} selectedItem = {this.state.selectedBrand} onChange = {this.onBrandsChange} placeholder = {\"Select Brands\"}/>\n                <Filter value = {this.state.categoryFilter} selectedItem = {this.state.selectedCategory} onChange = {this.onCategoryChange} placeholder = {\"Select Categories\"}/>\n                <button className=\"btn btn-outline-dark mt-2\" onClick={this.handleFilters.bind(this)}>\n                    Reset Filters\n                </button>\n            </div>\n\n                  <div className=\"col-lg-9\">\n                  <ProductCard products = {this.state.displayProducts} />\n                </div>\n                </div>\n            </div>\n      </div> :\n      <PageNotFound />\n      }\n      </div>\n    )\n  }\n}\n\nexport default ProductsHier;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Products from './components/products/products';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport {Route, Redirect, BrowserRouter as Router, Switch} from 'react-router-dom';\nimport PageNotFound from './404';\nimport ProductPage from './components/products/productPage';\nimport ProductsHier from './components/products/productsHier';\n\nconst routing = (\n    <Router >\n        <Switch>\n            <Route exact path = \"/\" component = {Products} />\n            <Route exact path = \"/product/:id\" component = {ProductPage} />\n            <Redirect exact path=\"/products\" to='/' />\n            <Route exact path = \"/products/*\" component = {ProductsHier} />\n            <Route component = {PageNotFound} />\n        </Switch>\n      </Router>\n)\n\n\n//\n//\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}